<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ChatApp.Gui"
             xmlns:fa="http://schemas.fontawesome.io/icons/" x:Class="ChatApp.Gui.RegistrationControl"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="700">
    <UserControl.Resources>
        <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#F0F0F0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#0AB2B0"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#27BBB9"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#00B2B0"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#0AB2B0"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#0AB2B0"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#0AB2B0"/>
        <Style x:Key="SignInButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#616161"/>
        <Style x:Key="LowerButtons" TargetType="{x:Type Button}" BasedOn="{StaticResource SignInButtonStyle}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
        </Style>


    </UserControl.Resources>

    <Grid Background="#282E33">
        <Grid MinHeight="350" MinWidth="350" VerticalAlignment="Center" HorizontalAlignment="Center" Height="304">
            <Label Content="Username"  Margin="50,14,50,310" Style="{DynamicResource LabelStyle}"/>
            <TextBox BorderBrush="{x:Null}" x:Name="UsernameTextBox" HorizontalAlignment="Center" Margin="0,40,0,0" Height="25" TextWrapping="Wrap" VerticalAlignment="Top" Width="250">
                <TextBox.Resources>
                    <Storyboard x:Key="TextBoxShakeStoryboard">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" RepeatBehavior="5x">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </TextBox.Resources>
                <TextBox.RenderTransform>
                    <TranslateTransform X="0" Y="0" />
                </TextBox.RenderTransform>
            </TextBox>

            <Label Content="Password"  Margin="50,64,50,260" Style="{DynamicResource LabelStyle}"/>
            <PasswordBox x:Name="PasswordPasswordBox" BorderBrush="{x:Null}" HorizontalAlignment="Center" Margin="50,90,50,0" VerticalAlignment="Top" Width="250" Height="25">
                <PasswordBox.Resources>
                    <Storyboard x:Key="PasswordBoxShakeStoryboard">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" RepeatBehavior="5x">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </PasswordBox.Resources>
                <PasswordBox.RenderTransform>
                    <TranslateTransform X="0" Y="0" />
                </PasswordBox.RenderTransform>
            </PasswordBox>
            <Label Content="Confirm Password"  Margin="50,116,50,208" Style="{DynamicResource LabelStyle}"/>
            <PasswordBox x:Name="ConfirmPasswordPasswordBox" BorderBrush="{x:Null}" HorizontalAlignment="Center" Margin="50,142,50,0" VerticalAlignment="Top" Width="250" Height="25">
                <PasswordBox.RenderTransform>
                    <TranslateTransform X="0" Y="0" />
                </PasswordBox.RenderTransform>
            </PasswordBox>
            <Button x:Name="SignUpButton" Content="Sign Up" Foreground="#F0F0F0" FontSize="18" HorizontalAlignment="Left" Margin="140,204,0,0" VerticalAlignment="Top" Width="160" Height="48" Style="{DynamicResource SignInButtonStyle}" Click="SignUpButton_Click"/>
            <Button x:Name="ReturnButton" Content="Return" Foreground="#F0F0F0" FontSize="18" HorizontalAlignment="Left" Margin="50,204,0,0" VerticalAlignment="Top" Width="85" Background="#5BCBCA" Height="48" Style="{DynamicResource SignInButtonStyle}" Click="ReturnButton_Click"/>

            <Label Name="ErrorLabel" Opacity="0" Foreground="#F0F0F0" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="50,172,0,0" VerticalAlignment="Top" Width="250" RenderTransformOrigin="0.572,0.385">
                <Label.Resources>
                    <Storyboard x:Key="LabelOpacity">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <LinearDoubleKeyFrame Value="5" KeyTime="0:0:1"></LinearDoubleKeyFrame>
                            <LinearDoubleKeyFrame Value="-5" KeyTime="0:0:5"></LinearDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </Label.Resources>
            </Label>

        </Grid>
        <Label Content="Label" HorizontalAlignment="Left" Margin="-770,-64,0,0" VerticalAlignment="Top"/>
    </Grid>
</UserControl>
